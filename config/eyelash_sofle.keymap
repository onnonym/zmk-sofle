#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    tapping-term-ms = <400>;
};

&lt {
    tapping-term-ms = <200>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp F1        &kp F2        &kp F3          &kp F4        &kp F5           &kp F6      &mmv MOVE_UP     &kp F7     &kp F8     &kp F9     &kp F10          &kp F11     &kp F12
&kp Z         &kp X         &kp V           &kp L         &kp C            &kp W       &mmv MOVE_DOWN   &kp K      &kp H      &kp G      &kp F            &kp Q       &kp MINUS
&mo 1         &kp U         &kp I           &kp A         &kp E            &kp O       &mmv MOVE_LEFT   &kp S      &kp N      &kp R      &kp T            &kp D       &lt 1 Z
&kp LSHFT     &kp LBKT      &kp SEMICOLON   &kp SQT       &kp P            &kp Y       &mmv MOVE_RIGHT  &kp B      &kp M      &kp COMMA  &kp DOT          &kp J       &kp RSHFT
&kp C_MUTE    &mo 3         &mo 4           &mt LGUI ESC  &mt LCTRL ENTER  &lt 2 TAB   &mkp LCLK        &kp SPACE  &kp BSPC   &kp LALT   &mo 4            &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };


        layer_1 {
            bindings = <
&trans      &trans          &trans          &trans          &trans          &trans          &trans  &trans          &trans      &trans          &trans          &trans          &trans
&trans      &kp LS(GRAVE)   &kp LS(FSLH)    &kp RA(N8)      &kp RA(N9)      &kp GRAVE       &trans  &kp LS(N1)      &kp NUBS    &kp LS(NUBS)    &kp LS(N0)      &kp LS(N6)      &kp RA(E)
&trans      &kp RA(MINUS)   &kp LS(N7)      &kp RA(N7)      &kp RA(N0)      &kp LS(RBKT)    &trans  &kp LS(MINUS)   &kp LS(N8)  &kp LS(N9)      &kp FSLH        &kp LS(DOT)     &kp RA(Q)
&trans      &kp BSLH        &kp LS(N4)      &kp RA(NUBS)    &kp RA(RBKT)    &kp KP_EQUAL    &trans  &kp RBKT        &kp LS(N5)  &kp LS(N2)      &kp LS(BSLH)    &kp LS(COMMA)   &trans
&trans      &trans          &trans          &trans          &trans          &trans          &trans  &trans          &trans      &trans          &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };


        layer_2 {
            bindings = <
&trans      &trans          &trans          &trans          &trans           &trans         &trans     &trans       &trans      &trans      &trans     &trans   &trans
&trans      &kp DELETE      &kp N7          &kp N8          &kp N9           &kp DOT        &trans     &kp HOME     &kp END     &kp UP      &trans     &trans   &trans
&trans      &trans          &kp N4          &kp N5          &kp N6           &kp N0         &trans     &kp PG_UP    &kp LEFT    &kp DOWN    &kp RIGHT  &trans   &trans
&trans      &trans          &kp N1          &kp N2          &kp N3           &kp COMMA      &trans     &kp PG_DN    &kp PSCRN   &trans      &trans     &trans   &trans
&trans      &trans          &trans          &trans          &trans           &trans         &trans     &trans       &trans      &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };


        layer_3 {
            bindings = <
&trans      &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans        &rgb_ug RGB_SPI     &rgb_ug RGB_EFF &rgb_ug RGB_BRI      &trans      &trans      &soft_off
&trans      &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans        &rgb_ug RGB_SPD     &rgb_ug RGB_EFR &rgb_ug RGB_BRD      &trans      &trans      &trans
&trans      &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &trans        &rgb_ug RGB_OFF     &rgb_ug RGB_ON  &trans               &trans      &trans      &trans
&trans      &sys_reset    &trans          &bootloader   &trans        &trans          &trans        &trans              &trans          &bootloader          &trans      &sys_reset  &trans
&trans      &trans        &trans          &trans        &trans        &trans          &trans        &trans              &trans          &trans               &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };


        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans      &trans      &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans      &trans      &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &mkp LCLK   &mkp MCLK   &mkp RCLK   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans      &trans      &trans       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans      &trans      &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
